{
  "blog.title": "Многоязычное приложение с NextJS, i18next и Myelin AI",
  "blog.description": "В этом руководстве мы изучим, как перевести ваше приложение NextJS на несколько языков с использованием i18next и Myelin AI.",
  "titleOne": "Часть A: Фронтенд",
  "stepOne.title": "Шаг 1: Создайте проект NextJS",
  "stepOne.paragraphOne": "Мы запустим эту команду, чтобы начать новый проект на next js.",
  "stepTwo.title": "Шаг 2: Добавить chadcn",
  "stepTwo.paragraphOne": "Теперь давайте добавим chadcn в наш проект. Myelin сильно вдохновлен chadcn и использует много его примитивов в качестве строительных блоков для создания кастомных компонентов, таких как переключатель языка.",
  "stepThree.title": "Шаг 3: Добавить локали",
  "stepThree.paragraphOne": "Теперь давайте добавим локали в наше приложение. Мы собираемся создать одну локаль с пространством имен, называемую common.json, непосредственно внутри директории locales/en. Myelin поддерживает как локали с пространством имен, так и локали без него. Но я настоятельно рекомендую использовать локали с пространством имен.",
  "stepFour.title": "Шаг 4: Добавьте код шаблона i18next",
  "stepFour.paragraphOne": "Следующим шагом добавим i18n-next и его компоненты в наше приложение. Мы можем использовать следующую команду для этого:",
  "stepFour.paragraphTwo": "Запуск этого выполнит следующее:",
  "stepFour.paragraphThree": "Установит основную библиотеку i18next и дополнительные модули для определения языка, бэкенд-соединений и преобразования ресурсов.",
  "stepFour.paragraphFour": "Реализует различные утилиты и компоненты в директории libs/i18n-next, включая управление куками, определение языка, конфигурацию, провайдеры и пользовательские хуки для функциональности перевода.",
  "stepFive.title": "Шаг 5: Обернуть layout.tsx",
  "stepFive.paragraphOne": "Мы собираемся обернуть компонент layout с помощью I18NextHtmlProvider.",
  "stepSix.title": "Шаг 6: Генерация типов",
  "stepSix.paragraph": "Перед тем как мы начнем использовать переводы, давайте сгенерируем типы. Это поможет нам с завершением типов при использовании хука useTranslation. Мы можем выполнить команду npx myelino upsert и выбрать i18next.d.ts. Это сгенерирует пользовательские типы в директории types.",
  "stepSeven.title": "Шаг 7: Используйте переводы",
  "stepSeven.paragraphOne": "С созданными пользовательскими типами мы можем использовать пользовательский хук useTranslation следующим образом:",
  "stepSeven.paragraphTwo": "Вы заметите завершение типов при вводе пространств имен. Это до того, как мы создали типы на предыдущем шаге.",
  "stepSeven.paragraphThree": "Мы закончили раздел фронтенда. Теперь развлекательная часть — многоязычные переводы с Myelin AI."
}
