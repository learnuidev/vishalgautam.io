{
  "blog.title": "बहुभाषी ऐप नेक्स्टजेएस, i18next और मायेलिन एआई के साथ",
  "blog.description": "इस ट्यूटोरियल में, हम अपने नेक्स्टजेएस ऐप को i18next और मायेलिन एआई का उपयोग करके कई भाषाओं में अनुवादित करना सीखेंगे।",
  "titleOne": "भाग ए: फ्रंटेंड",
  "stepOne.title": "चरण 1: NextJS परियोजना बनाएं",
  "stepOne.paragraphOne": "हम एक नई नेक्स्ट जेएस परियोजना शुरू करने के लिए यह कमांड चलाएंगे",
  "stepTwo.title": "चरण 2: चाडसीन जोड़ें",
  "stepTwo.paragraphOne": "अगला, चलिए चाडसीन को हमारे प्रोजेक्ट में जोड़ते हैं। माइलिन चाडसीन से काफी प्रेरित है और कस्टम घटक बनाने के लिए इसके कई प्राइमिटिव्स का उपयोग करता है जैसे भाषा-स्विचर।",
  "stepThree.title": "चरण 3: स्थानीय भाषाएं जोड़ें",
  "stepThree.paragraphOne": "अब, चलिए हमारी एप्लिकेशन में स्थानीय भाषाएं जोड़ते हैं। हम locales/en निर्देशिका के अंदर common.json नाम की एक सिंगल नामस्थानीय भाषा बनाएंगे। मायलीन नामस्थानीय और गैर-नामस्थानीय दोनों प्रकार की भाषाओं का समर्थन करता है। लेकिन मैं आपको नामस्थानीय भाषाओं का ही पालन करने की पूरी सलाह देता हूं।",
  "stepFour.title": "कदम 4: i18next बायलरप्लेट कोड जोड़ें",
  "stepFour.paragraphOne": "अगला, चलिए अपने ऐप में i18n-next और उसके सहयोगियों को जोड़ते हैं। हम ऐसा करने के लिए निम्नलिखित कमांड का उपयोग कर सकते हैं:",
  "stepFour.paragraphTwo": "इसे चलाने से निम्नलिखित होगा:",
  "stepFour.paragraphThree": "मुख्य i18next पुस्तकालय और भाषा पहचान, बैकएंड चेनिंग, और संसाधन परिवर्तन के लिए अतिरिक्त मॉड्यूल स्थापित करें।",
  "stepFour.paragraphFour": "libs/i18n-next डायरेक्टरी में कुकी प्रबंधन, भाषा पहचान, कॉन्फ़िगरेशन, प्रदाता, और अनुवादन कार्यक्षमता के लिए कस्टम हुक सहित विभिन्न उपयोगिताएँ और घटक लागू करें।",
  "stepFive.title": "कदम 5: लेआउट.tsx लपेटें",
  "stepFive.paragraphOne": "हम लेआउट घटक को I18NextHtmlProvider के साथ लपेटने जा रहे हैं।",
  "stepSix.title": "चरण 6: प्रकार उत्पन्न करें",
  "stepSix.paragraph": "हम अनुवादों का उपयोग करना शुरू करने से पहले, आइए प्रकार उत्पन्न करें। इससे हमें useTranslation हुक का उपयोग करते समय प्रकार पूर्णता में सहायता मिलेगी। हम npx myelino upsert चला सकते हैं और i18next.d.ts का चयन कर सकते हैं। यह प्रकार निर्देशिका के तहत कस्टम प्रकार उत्पन्न करेगा।",
  "stepSeven.title": "चरण 7: अनुवादों का उपयोग करें",
  "stepSeven.paragraphOne": "कस्टम प्रकार तैयार होने के बाद, हम कस्टम useTranslation हुक का उपयोग इस तरह कर सकते हैं:",
  "stepSeven.paragraphTwo": "आपNamespaces टाइप करते समय टाइप पूर्णता देखेंगे। यह पिछली चरण में प्रकार तैयार करने से पहले है।",
  "stepSeven.paragraphThree": "हम फ्रंटेंड अनुभाग के साथ समाप्त हो गए हैं। अब मजेदार हिस्सा, Myelin AI के साथ बहुभाषीय अनुवाद।"
}
