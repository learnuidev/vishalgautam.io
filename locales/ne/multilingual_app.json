{
  "blog.title": "नेक्स्टजेएस, i18next र मायेलिन एआईको साथ बहुभाषिक अनुप्रयोग",
  "blog.description": "यो ट्यूटोरियलमा हामीले तपाईंको नेक्स्टजेएस अनुप्रयोगलाई i18next र मायेलिन एआईको प्रयोग गरेर विभिन्न भाषामा अनुवाद गर्ने बारेमा सिक्न जान्छौं।",
  "titleOne": "भाग A: फ्रन्टएंड",
  "stepOne.title": "चरण 1: नेक्स्टजेएस प्रोजेक्ट सिर्जना गर्नुहोस्",
  "stepOne.paragraphOne": "हामी नयाँ नेक्स्ट जेएस परियोजना आरम्भ गर्न यो आदेश चलाउनेछौं",
  "stepTwo.title": "चरण 2: चाडसीएन थप्नुहोस्",
  "stepTwo.paragraphOne": "पछ्यौं, चाडसीएनलाई हाम्रो परियोजनामा थपौं। मायेलिन चाडसीएनबाट गम्भीर प्रेरित भएको छ र यसले भाषाश्रेय-स्विचर जस्ता अनुकूलन घटकहरू सिर्जना गर्नका लागि यसको धेरै प्राथमिकताहरूको प्रयोग गर्दछ।",
  "stepThree.title": "चरण 3: लोकेलहरू थप्नुहोस्",
  "stepThree.paragraphOne": "पछ्यौं, हामी हाम्रो आवेदनमा लोकेलहरू थप्नेछौं। हामी locales/en निर्देशिकाभित्र common.json भन्ने एक मात्र नामस्थानयुक्त लोकेल सिर्जना गर्नेछौं। मायेलिनले दुवै नामस्थानयुक्त र गैर-नामस्थानयुक्त लोकेलहरूलाई समर्थन गर्दछ। तर म तपाईंलाई नामस्थानयुक्त लोकेलहरूमा अडिक रहनको लागि अत्यधिक प्रोत्साहित गर्दछु।",
  "stepFour.title": "चरण 4: i18next ब्वाइलेर्प्लेट कोड थप्नुहोस्",
  "stepFour.paragraphOne": "पछी हामी हाम्रो अनुप्रयोगमा i18n-next र साथीहरू थप्दैछौं। यो गर्नको लागि हामी तलको आदेश प्रयोग गर्न सक्छौं:",
  "stepFour.paragraphTwo": "यसलाई चलाउँदा निम्न कार्य हुनेछन्:",
  "stepFour.paragraphThree": "मुख्य i18next पुस्तकालय र भाषा पत्ता लगाउने, पछाडि चेनिंग र स्रोत रूपान्तरणका लागि अतिरिक्त मोड्युलहरू इन्स्टल गर्नुहोस्।",
  "stepFour.paragraphFour": "libs/i18n-next निर्देशिकामा कुकी व्यवस्थापन, भाषा पत्ता लगाउने, कन्फिगरेसन, प्रदायकहरू, र अनुवाद कार्यक्षमताका लागि अनुकूलन हुकहरू सहित विभिन्न युटिलिटी कार्यहरू र घटकहरू लागू गर्नुहोस्।",
  "stepFive.title": "चरण 5: layout.tsx लपेट्नुहोस्",
  "stepFive.paragraphOne": "हामी लेआउट घटकलाई I18NextHtmlProvider सँग लपेट्न जाँदैछौं",
  "stepSix.title": "चरण 6: प्रकारहरू उत्पन्न गर्नुहोस्",
  "stepSix.paragraph": "हामी अनुवादहरू प्रयोग गर्न सुरु गर्न अघि, प्रकारहरू उत्पन्न गरौँ। यसले हामीलाई useTranslation हुक प्रयोग गर्दा प्रकारको पूर्णता सँग मद्दत गर्नेछ। हामी npx मायेलिनो उपर्स्ट चलाउन सक्छौं र i18next.d.ts चयन गर्न सक्छौं। यसले प्रकारहरू निर्देशिका भित्र अनुकूलन प्रकारहरू उत्पन्न गर्नेछ।",
  "stepSeven.title": "चरण 7: अनुवादहरू प्रयोग गर्नुहोस्",
  "stepSeven.paragraphOne": "अनुकूलन प्रकारहरू उत्पन्न गर्दा, हामी यसरी अनुकूलन useTranslation हुक प्रयोग गर्न सक्छौं:",
  "stepSeven.paragraphTwo": "तपाईंले namespaces टाइप गर्दा प्रकारको पूर्णता देख्न सक्नुहुनेछ। यो प्रायः अघिल्लो चरणमा प्रकारहरू उत्पन्न गर्नु अघि हो।",
  "stepSeven.paragraphThree": "हामी फ्रन्टएंड खण्डसँग समाप्त गरेका छौं। अब रमाइलो भाग, मायेलिन एआईसँग बहुभाषिक अनुवाद।",
  "partTwo.title": "भाग B: मायेलिन एआईसँग बहुभाषिक अनुवाद",
  "partTwo.intro": "परिचय",
  "partTwo.intro.paragraphOne": "ठिक छ, अब हामीसँग फ्रन्टएंड छ, हामी मायेलिनको साथ हाम्रो अनुवाद इन्फ्रास्ट्रक्चर पाइपलाइन सुरु गर्न तयार छौं।",
  "partTwo.intro.paragraphTwo": "मायेलिन एक खुला स्रोत स्थानीय पहलमा आधारित अनुवाद इन्फ्रास्ट्रक्चर हो, जसले बहु भाषा अनुवादहरू व्यवस्थापन, समन्वय र सञ्चालन गर्न अत्यन्त सजिलो बनाउँछ। यसलाई प्रयोग गर्नको लागि पहिलो कदम यसलाई आरम्भ गर्नु हो।",
  "partTwo.intro.paragraphThree": "तपाईंलाई स्रोत अनुवाद, लक्ष्य अनुवादहरू र तपाईंको रोजाइको एआई सेवा प्रदायक प्रदान गर्न भन्न सकिन्छ। यदि तपाईं चाहनुहुन्छ भने तपाईं अनुकूलन एआई प्रदायक पनि थप्न सक्नुहुन्छ। चीजहरूलाई सरल राख्न, हामी खुला एआई चयन गर्दैछौं।",
  "partTwo.intro.paragraphFour": "तपाईंलाई पनि तपाईंको एपीआई कुञ्जीहरू प्राप्त गर्न र यसलाई .env फाइलमा बचत गर्न आवश्यक हुनेछ।"
}
