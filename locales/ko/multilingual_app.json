{
  "blog.title": "NextJS, i18next 및 Myelin AI를 사용하는 다국어 앱",
  "blog.description": "이 튜토리얼에서는 i18next 및 Myelin AI를 사용하여 NextJS 앱을 여러 언어로 번역하는 방법에 대해 알아보겠습니다.",
  "titleOne": "파트 A: 프론트엔드",
  "stepOne.title": "1단계: NextJS 프로젝트 생성",
  "stepOne.paragraphOne": "새로운 Next.js 프로젝트를 시작하기 위해 이 명령을 실행합니다.",
  "stepTwo.title": "2단계: Chadcn 추가",
  "stepTwo.paragraphOne": "다음으로 Chadcn을 우리 프로젝트에 추가합니다. Myelin은 Chadcn에서 많은 영감을 받았으며 사용자 정의 구성 요소를 만들기 위해 많은 기본 요소를 사용합니다.",
  "stepThree.title": "3단계: 로케일 추가",
  "stepThree.paragraphOne": "다음으로 우리의 애플리케이션에 로케일을 추가합니다. 우리는 locales/en 디렉토리에 common.json이라는 단일 네임스페이스 로케일을 생성할 것입니다. Myelin은 네임스페이스가 있는 로케일과 없는 로케일 모두를 지원합니다. 그러나 네임스페이스가 있는 로케일을 사용하는 것이 좋습니다.",
  "stepFour.title": "4단계: i18next 보일러플레이트 코드 추가",
  "stepFour.paragraphOne": "다음으로 i18n-next 및 친구들을 우리의 앱에 추가합니다. 이를 위해 다음 명령을 사용할 수 있습니다:",
  "stepFour.paragraphTwo": "이 명령을 실행하면 다음과 같은 작업이 수행됩니다:",
  "stepFour.paragraphThree": "언어 감지, 백엔드 체이닝 및 리소스 변환을 위한 기본 i18next 라이브러리 및 추가 모듈을 설치합니다.",
  "stepFour.paragraphFour": "libs/i18n-next 디렉토리에 쿠키 관리, 언어 감지, 구성, 공급자 및 번역 기능을 위한 사용자 정의 훅을 포함한 다양한 유틸리티 함수 및 구성 요소를 구현합니다.",
  "stepFive.title": "5단계: layout.tsx 래핑",
  "stepFive.paragraphOne": "우리는 I18NextHtmlProvider로 레이아웃 구성 요소를 래핑할 것입니다.",
  "stepSix.title": "6단계: 타입 생성",
  "stepSix.paragraph": "번역을 사용하기 시작하기 전에 타입을 생성합시다. 이는 useTranslation 훅 사용 시 타입 완성에 도움이 될 것입니다. npx myelino upsert를 실행하고 i18next.d.ts를 선택합니다. 이는 types 디렉토리 아래에 사용자 정의 타입을 생성할 것입니다.",
  "stepSeven.title": "7단계: 번역 사용",
  "stepSeven.paragraphOne": "생성된 사용자 정의 타입을 사용하여 다음과 같이 사용자 정의 useTranslation 훅을 사용할 수 있습니다:",
  "stepSeven.paragraphTwo": "네임스페이스를 입력할 때 타입 완성을 볼 수 있습니다. 이는 이전 단계에서 타입을 생성하기 전입니다.",
  "stepSeven.paragraphThree": "프론트엔드 섹션이 완료되었습니다. 이제 Myelin AI를 사용한 다국어 번역의 재미있는 부분입니다.",
  "partTwo.title": "파트 B: Myelin AI를 이용한 다국어 번역",
  "partTwo.intro": "소개",
  "partTwo.intro.paragraphOne": "좋습니다. 이제 프론트엔드가 준비되었으니 Myelin을 사용하여 번역 인프라 파이프라인을 시작할 준비가 되었습니다.",
  "partTwo.intro.paragraphTwo": "Myelin은 초간단하게 다국어 번역을 관리, 동기화 및 실행할 수 있는 오픈 소스 로컬 우선 번역 인프라입니다. 사용하기 위한 첫 번째 단계는 초기화하는 것입니다.",
  "partTwo.intro.paragraphThree": "원하는 경우, 소스 번역, 대상 번역 및 원하는 AI 서비스 제공자를 제공하라는 요청을 받을 것입니다. 원하시면 사용자 정의 AI 제공자를 추가할 수도 있습니다. 간단하게 하기 위해 openai를 선택할 것입니다.",
  "partTwo.intro.paragraphFour": "API 키를 받아서 .env 파일에 저장해야 합니다.",
  "partTwo.translate.title": "번역",
  "partTwo.translate.paragraphOne": "이제 번역 파이프라인을 실행할 준비가 되었습니다. 다음 명령어로 할 수 있습니다.",
  "partTwo.translate.paragraphTwo": "이 명령을 실행하면 Myelin이 소스 JSON 파일(예: locales/en/common.json)을 로드하고, 새로운 또는 업데이트된 번역 문자열을 식별한 후, 지정된 대상 언어에 대한 번역을 생성하고, 관련 대상 언어 JSON 네임스페이스 파일(예: locales/fr/common.json, locales/es/common.json, locales/zh/common.json)을 생성하거나 업데이트합니다.",
  "partTwo.translate.paragraphThree": "실제로 작동하는지 확인하려면 언어 전환기 구성 요소를 가져올 수 있습니다.",
  "partTwo.translate.note": "노트: 언어 전환기는 다음 chadcn 구성 요소인 드롭다운 메뉴와 버튼 위에 구축되었습니다. 설치하려면 이 스크립트를 사용하십시오:",
  "conclusion": "그게 전부입니다. 당신은 자신의 다국어 앱을 만들었습니다, 챗봇 스타일. 잘 했어요!"
}
