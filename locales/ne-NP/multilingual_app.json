{
  "blog.title": "नेपालीमा बहुभाषिक एप NextJS, i18next र Myelin AI को साथ",
  "blog.description": "यस ट्यूटोरियलमा हामी i18next र myelin ai को प्रयोग गरेर तपाईंको NextJS एपलाई धेरै भाषामा अनुवाद गर्ने बारेमा सिक्नेछौं।",
  "titleOne": "भाग A: फ्रन्टएन्ड",
  "stepOne.title": "चरण 1: NextJS परियोजना सिर्जना गर्नुहोस्",
  "stepOne.paragraphOne": "हामी नयाँ Next JS परियोजना शुरू गर्न यो आदेश चलाउनेछौं।",
  "stepTwo.title": "चरण 2: chadcn थप्नुहोस्",
  "stepTwo.paragraphOne": "अर्कोतर्फ, हाम्रो परियोजनामा chadcn थप्न आधिक समय छ। Myelin ले chadcn बाट धेरै प्रेरणा लिएको छ र यसले भाषा-स्विचर जस्ता अनुकूलित घटक सिर्जना गर्नका लागि धेरै गुणस्तरीयका आधारका रूपमा चाड्स प्रयोग गर्दछ।",
  "stepThree.title": "चरण 3: स्थानियता थप्नुहोस्",
  "stepThree.paragraphOne": "अर्कोतर्फ, हाम्रो अनुप्रयोगमा स्थानियता थप्न आधिक समय छ। हामी locales/en डाइरेक्टरी भित्र common.json नामको एक मात्र नामाङ्कित स्थानियता सिर्जना गर्न जान्छौं। Myelin दुवै नामाङ्कित र गैर-नामाङ्कित स्थानियतालाई समर्थन गर्दछ। तर म तपाईंलाई नामाङ्कित स्थानियतामा टाँस्न अत्यधिक प्रोत्साहित गर्छु।",
  "stepFour.title": "चरण 4: i18next बोइलरप्लेट कोड थप्नुहोस्",
  "stepFour.paragraphOne": "अर्कोतर्फ, हाम्रो अनुप्रयोगमा i18n-next र साथीहरू थप्न आधिक समय छ। हामी यसलाई गर्न निम्न आदेश प्रयोग गर्न सक्छौं:",
  "stepFour.paragraphTwo": "यसलाई चलाउँदा तलका क्रियाहरू गरिनेछ:",
  "stepFour.paragraphThree": "भाषा पहिचान, ब्याकएण्ड चेनिङ, र संसाधन रूपान्तरणका लागि अतिरिक्त मोड्युलहरू सहितको मुख्य i18next लाइब्रेरीलाई इन्स्टल गर्नुहोस्।",
  "stepFour.paragraphFour": "libs/i18n-next डाइरेक्टरीमा कुकि प्रबंधन, भाषा पहिचान, कन्फिगरेसन, प्रदायकहरू, र अनुवाद कार्यक्षमता लागि अनुकूलित हुकहरू सहितका विभिन्न उपयोगिता कार्यहरू र घटकहरू कार्यान्वयन गर्नुहोस्।",
  "stepFive.title": "चरण 5: layout.tsx लपेट्नुहोस्",
  "stepFive.paragraphOne": "हामी I18NextHtmlProvider सँग लेआउट कम्पोनेंटलाई लपेट्नेछौं।",
  "stepSix.title": "चरण 6: प्रकारहरू उत्पादन गर्नुहोस्",
  "stepSix.paragraph": "हामी अनुवादहरू प्रयोग गर्न शुरू गर्नुअघि, आइए प्रकारहरू उत्पादन गरौं। यसले useTranslation हुक प्रयोग गर्दा हामीलाई प्रकार पूरा गर्न मद्दत गर्नेछ। हामी npx myelino upsert चलाउन सक्छौं र i18next.d.ts चयन गर्न सक्छौं। यसले types डाइरेक्टरीमा अनुकूलित प्रकारहरू उत्पन्न गर्नेछ।",
  "stepSeven.title": "चरण 7: अनुवादहरू प्रयोग गर्नुहोस्",
  "stepSeven.paragraphOne": "अनुकूलित प्रकारहरू उत्पादन गरिसकेपछि, हामी यसरी अनुकूलित useTranslation हुक प्रयोग गर्न सक्छौं:",
  "stepSeven.paragraphTwo": "तपाईंले नामाङ्कहरू टाइप गर्दा प्रकार पूरा हुनNotice गर्नुहुनेछ। यो हामीले अघिल्लो चरणमा उत्पन्न भएको प्रकारहरू भन्दा पहिल्यै हो।",
  "stepSeven.paragraphThree": "हामी फ्रन्टएन्ड खण्डसँग निस्किसकेका छौं। अब रमाइलो भाग, Myelin AI संग बहुभाषिक अनुवाद।",
  "partTwo.title": "भाग B: Myelin AI संग बहुभाषिक अनुवाद",
  "partTwo.intro": "परिचय",
  "partTwo.intro.paragraphOne": "ठिक छ, अब हामीसँग फ्रन्टएन्ड छ, हामी myelin संग हाम्रो अनुवाद инфраструктुरा पाईपलाइन सुरू गर्न तयार छौं।",
  "partTwo.intro.paragraphTwo": "Myelin भनेको एक खुला स्रोत स्थानीय पहिलो अनुवादको संरचना हो जुन बहुभाषिक अनुवाद व्यवस्थापन, समन्वय, र चलाउन अत्यन्त सजिलो बनाउँछ। यसलाई प्रयोग गर्नको पहिलो कदम यसलाई आरम्भ गर्नु हो।",
  "partTwo.intro.paragraphThree": "तपाईलाई स्रोत अनुवाद, लक्ष्य अनुवादहरू र तपाईको छनौटको AI सेवा प्रदायक प्रदान गर्न भनिनेछ। यदि तपाईं चाहनुहुन्छ भने, तपाईं अनुकूलित AI प्रदायक पनि थप्न सक्नुहुन्छ। कुरा सजिलो राख्नका लागि हामी openai चयन गर्दै छौं।",
  "partTwo.intro.paragraphFour": "तपाईंलाई पनि तपाईंका API कुञ्जीहरू पाउन र यसलाई .env फाइलमा सुरक्षित राख्न आवश्यक हुनेछ।"
}
